class ShapeGenerator:
    def __init__(self, shape_type, shape_name):
        return self.create_shape(shape_type, shape_name)

    def create_shape (self, shape_type, shape_name):
        if  shape_type == 'cube':
            return self.create_cube(shape_name)

        if shape_type == 'sphere':
            return self.create_sphere(shape_name)

        if shape_type == 'piramidal':
            return self.create_piramidal(shape_name)

        if shape_type == 'arch':
            return self.create_arch(shape_name)

        if shape_type == 'oar':
            return self.create_oar(shape_name)

        if shape_type == 'hand':
            return self.create_hand(shape_name)

        if shape_type == 'fourArrows':
            return self.create_fourarrows(shape_name)

        if shape_type == 'semisphere':
            return self.create_semisphere(shape_name)

        if shape_type == 'foot':
            return self.create_foot(shape_name)

        if shape_type == 'eye':
            return self.create_eye(shape_name)

        if shape_type == 'fingers':
            return self.create_fingers(shape_name)

        if shape_type == 'triangle':
            return self.create_triangle(shape_name)

        if shape_type == 'singlearrow':
            return self.create_singlearrow(shape_name)

        if shape_type == 'square':
            return self.create_square(shape_name)

        if shape_type == 'circle':
            return self.create_circle(shape_name)

    def create_cube (self, shape_name):

        cube = cmds.curve(name=shape_name, d=1,
                            p=[(-1, 1, 1), (-1, 1, -1), (1, 1, -1), (1, 1, 1), (-1, 1, 1), (-1, -1, 1), (-1, -1, -1),
                               (-1, 1, -1),
                               (-1, 1, 1), (-1, -1, 1), (1, -1, 1), (1, 1, 1), (1, 1, -1), (1, -1, -1), (1, -1, 1),
                               (1, -1, -1),
                               (-1, -1, -1)])

        return cube

    def create_sphere (self, shape_name):
        sphere = cmds.curve(name=shape_name, d=1,
                    p=[(0, 1, 0), (0, 0.92388, 0.382683), (0, 0.707107, 0.707107), (0, 0.382683, 0.92388), (0, 0, 1),
                    (0, -0.382683, 0.92388), (0, -0.707107, 0.707107), (0, -0.92388, 0.382683), (0, -1, 0),
                    (0, -0.92388, -0.382683), (0, -0.707107, -0.707107), (0, -0.382683, -0.92388), (0, 0, -1),
                    (0, 0.382683, -0.92388), (0, 0.707107, -0.707107), (0, 0.92388, -0.382683), (0, 1, 0),
                    (0.382683, 0.92388, 0), (0.707107, 0.707107, 0), (0.92388, 0.382683, 0), (1, 0, 0),
                    (0.92388, -0.382683, 0), (0.707107, -0.707107, 0), (0.382683, -0.92388, 0), (0, -1, 0),
                    (-0.382683, -0.92388, 0), (-0.707107, -0.707107, 0), (-0.92388, -0.382683, 0), (-1, 0, 0),
                    (-0.92388, 0.382683, 0), (-0.707107, 0.707107, 0), (-0.382683, 0.92388, 0), (0, 1, 0),
                    (0, 0.92388, -0.382683), (0, 0.707107, -0.707107), (0, 0.382683, -0.92388), (0, 0, -1),
                    (-0.382683, 0, -0.92388), (-0.707107, 0, -0.707107), (-0.92388, 0, -0.382683), (-1, 0, 0),
                    (-0.92388, 0, 0.382683), (-0.707107, 0, 0.707107), (-0.382683, 0, 0.92388), (0, 0, 1),
                    (0.382683, 0, 0.92388), (0.707107, 0, 0.707107), (0.92388, 0, 0.382683), (1, 0, 0),
                    (0.92388, 0, -0.382683), (0.707107, 0, -0.707107), (0.382683, 0, -0.92388), (0, 0, -1)])

        return sphere

    def create_piramidal (self, shape_name):
        piramidal = cmds.curve(name=shape_name, d=1,
                    p=[(-4.982654, 0, 0), (4.946539, 0, -3.309731), (4.946539, 0, 3.309731), (-4.982654, 0, 0),
                    (4.946539, 3.309731, 0), (4.946539, -3.309731, 0), (-4.982654, 0, 0)])

        return piramidal

    def create_arch (self, shape_name):
        arch = cmds.curve(name=shape_name, d=1,
                    p=[(0.934487, 1.275837, 2.01658e-008), (0.932697, 1.247176, -0.35686), (0.920752, 1.172835, -0.686003),
                    (0.891476, 1.068829, -0.978435), (0.840076, 0.946678, -1.231929), (0.763591, 0.814991, -1.445766),
                    (0.661715, 0.681111, -1.621424), (0.537155, 0.551427, -1.765671), (0.387617, 0.433133, -1.880322),
                    (0.209586, 0.33878, -1.961541), (0, 0.297363, -1.993747), (-0.209586, 0.33878, -1.961541),
                    (-0.387617, 0.433133, -1.880322), (-0.537155, 0.551427, -1.765671), (-0.661715, 0.681111, -1.621424),
                    (-0.763591, 0.814991, -1.445766), (-0.840076, 0.946678, -1.231929), (-0.891476, 1.068829, -0.978435),
                    (-0.920752, 1.172835, -0.686003), (-0.932697, 1.247176, -0.35686), (-0.934487, 1.275837, 2.01658e-008),
                    (-0.917572, 1.470617, 0), (-0.856971, 1.657129, 0), (-0.758916, 1.826965, 0), (-0.627692, 1.972704, 0),
                    (-0.469036, 2.087974, 0), (-0.28988, 2.167739, 0), (-0.0980551, 2.208513, 0), (0.0980551, 2.208513, 0),
                    (0.28988, 2.167739, 0), (0.469036, 2.087974, 0), (0.627692, 1.972704, 0), (0.758916, 1.826965, 0),
                    (0.856971, 1.657129, 0), (0.917572, 1.470617, 0), (0.934487, 1.275837, 2.01658e-008),
                    (0.932697, 1.247176, 0.35686), (0.920752, 1.172834, 0.686003), (0.891476, 1.06883, 0.978435),
                    (0.840076, 0.946678, 1.23193), (0.763591, 0.814992, 1.445765), (0.661715, 0.68111, 1.621426),
                    (0.537155, 0.55143, 1.765669), (0.387617, 0.433127, 1.880326), (0.209586, 0.338788, 1.961536),
                    (0, 0.297318, 1.993775), (-0.209586, 0.338788, 1.961536), (-0.387617, 0.433127, 1.880326),
                    (-0.537155, 0.55143, 1.765669), (-0.661715, 0.68111, 1.621426), (-0.763591, 0.814992, 1.445765),
                    (-0.840076, 0.946678, 1.23193), (-0.891476, 1.06883, 0.978435), (-0.920752, 1.172834, 0.686003),
                    (-0.932697, 1.247176, 0.35686), (-0.934487, 1.275837, 2.01658e-008)])

        return arch

    def create_oar (self, shape_name):
        oar = cmds.curve(name=shape_name, d=1,
                    p=[(0, 0, 0), (0, 15, 0), (-3.75, 18.75, 0), (-3.75, 22.5, 0), (3.75, 22.5, 0), (3.75, 18.75, 0), (0,15,0)])

        return oar

    def create_hand(self, shape_name):
        hand = cmds.curve(name=shape_name, d=1,
                          p=[(-4.455756, 0, -0.864549), (-4.08878, 0, -0.959691), (-3.721804, 0, -0.959691),
                             (-3.409195, 0, -0.891732),
                             (-2.892711, 0, -0.565531), (-2.498551, 0, -0.117005), (-1.9277, 0, 0.576171),
                             (-1.68305, 0, 0.671313),
                             (-1.397624, 0, 0.535396), (-1.220932, 0, 0.263562), (-1.628683, 0, -1.35385),
                             (-2.022842, 0, -2.672245),
                             (-2.131576, 0, -3.161546), (-2.117984, 0, -3.67803), (-1.982067, 0, -4.140148),
                             (-1.723825, 0, -4.466349),
                             (-1.397624, 0, -4.588674), (-1.003465, 0, -4.466349), (-0.758814, 0, -4.303248),
                             (-0.500572, 0, -3.895498),
                             (-0.310288, 0, -3.338238), (-0.147188, 0, -0.986874), (-0.0248624, 0, -0.674265),
                             (0.138238, 0, -0.483981),
                             (0.369297, 0, -0.606307), (0.505214, 0, -0.810182), (0.586764, 0, -1.408217),
                             (0.491622, 0, -3.800356),
                             (0.641131, 0, -4.411982), (0.845006, 0, -4.738183), (1.171207, 0, -4.969242),
                             (1.538183, 0, -5.050792),
                             (1.810017, 0, -4.928467), (2.054667, 0, -4.629449), (2.244951, 0, -4.208107),
                             (2.258543, 0, -3.555705),
                             (2.027484, 0, -2.441186), (1.646917, 0, -0.782999), (1.633325, 0, -0.456798),
                             (1.742058, 0, -0.171372),
                             (2.013892, 0, -0.280106), (2.258543, 0, -0.511165), (2.707069, 0, -1.530542),
                             (2.829394, 0, -2.169352),
                             (3.087637, 0, -2.699428), (3.27792, 0, -2.984854), (3.658488, 0, -3.147954),
                             (4.052647, 0, -3.107179),
                             (4.270114, 0, -2.889712), (4.338073, 0, -2.617878), (4.297298, 0, -2.019843),
                             (3.495388, 0, -0.456798),
                             (3.223554, 0, 0.72568), (3.019678, 0, 2.424642), (2.666294, 0, 3.60712),
                             (2.380868, 0, 4.042054),
                             (1.945934, 0, 4.476989), (1.443041, 0, 4.789598), (0.817823, 0, 4.96629),
                             (0.287747, 0, 5.020657),
                             (-0.337471, 0, 4.96629), (-0.853956, 0, 4.735231), (-1.302482, 0, 4.40903),
                             (-2.104392, 0, 3.52557),
                             (-2.620877, 0, 2.519784), (-2.851936, 0, 1.867383), (-3.137361, 0, 1.405265),
                             (-3.572296, 0, 1.065472),
                             (-4.102372, 0, 0.793638), (-4.523715, 0, 0.372296), (-4.700407, 0, -0.0082718),
                             (-4.754773, 0, -0.348064),
                             (-4.632448, 0, -0.647082), (-4.455756, 0, -0.864549)])

        return hand

    def create_fourarrows(self, shape_name):
        fourarrows = cmds.curve(name=shape_name, d=1,
                         p=[(-5, 0, 0), (-3, 0, -2), (-3, 0, -1), (-1, 0, -1), (-1, 0, -3), (-2, 0, -3), (0, 0, -5),
                            (2, 0, -3),
                            (1, 0, -3), (1, 0, -1), (3, 0, -1), (3, 0, -2), (5, 0, 0), (3, 0, 2), (3, 0, 1), (1, 0, 1),
                            (1, 0, 3),
                            (2, 0, 3), (0, 0, 5), (-2, 0, 3), (-1, 0, 3), (-1, 0, 1), (-3, 0, 1), (-3, 0, 2),
                            (-5, 0, 0)])

        return fourarrows

    def create_semisphere (self, shape_name):
        semisphere = cmds.curve(name=shape_name, d=1,  p=[(-6.283766, 0, 9.1204e-010), (-6.203579, 0, -0.982165), (-5.969952, 0, -1.939507), (-5.592832, 0, -2.849955),
               (-5.081088, 0, -3.692098), (-4.443293, 0, -4.443293), (-3.692098, 0, -5.081088), (-2.849955, 0, -5.592832),
               (-1.939507, 0, -5.969952), (-0.982165, 0, -6.20358), (0, 0, -6.283764), (0, 0.982162, -6.20358),
               (0, 1.939508, -5.969952), (0, 2.849954, -5.592832), (0, 3.692098, -5.081088), (0, 4.443293, -4.443293),
               (0, 5.081089, -3.692098), (0, 5.592832, -2.849955), (0, 5.969952, -1.939507), (0, 6.203579, -0.982165),
               (0, 6.283766, 0), (0, 6.203579, 0.982165), (0, 5.969952, 1.939507), (0, 5.592832, 2.849955),
               (0, 5.081089, 3.692098), (0, 4.443293, 4.443293), (0, 3.692098, 5.081088), (0, 2.849954, 5.592832),
               (0, 1.939508, 5.969952), (0, 0.982162, 6.20358), (0, 0, 6.283766), (-0.982165, 0, 6.203579),
               (-1.939507, 0, 5.969952), (-2.849955, 0, 5.592832), (-3.692098, 0, 5.081088), (-4.443293, 0, 4.443293),
               (-5.081088, 0, 3.692098), (-5.592832, 0, 2.849955), (-5.969952, 0, 1.939507), (-6.203579, 0, 0.982165),
               (-6.283766, 0, 9.1204e-010), (-6.20358, 0.982162, 0), (-5.969952, 1.939508, 0), (-5.592832, 2.849954, 0),
               (-5.081088, 3.692098, 0), (-4.443293, 4.443293, 0), (-3.692098, 5.081089, 0), (-2.849955, 5.592832, 0),
               (-1.939507, 5.969952, 0), (-0.982165, 6.203579, 0), (0, 6.283766, 0), (0.982165, 6.203579, 0),
               (1.939507, 5.969952, 0), (2.849955, 5.592832, 0), (3.692098, 5.081089, 0), (4.443293, 4.443293, 0),
               (5.081088, 3.692098, 0), (5.592832, 2.849954, 0), (5.969952, 1.939508, 0), (6.20358, 0.982162, 0),
               (6.283766, 0, 9.12045e-010), (6.203579, 0, 0.982165), (5.969952, 0, 1.939507), (5.592832, 0, 2.849955),
               (5.081088, 0, 3.692098), (4.443293, 0, 4.443293), (3.692098, 0, 5.081088), (2.849955, 0, 5.592832),
               (1.939507, 0, 5.969952), (0.982165, 0, 6.203579), (0, 0, 6.283766), (0.982165, 0, 6.203579),
               (1.939507, 0, 5.969952), (2.849955, 0, 5.592832), (3.692098, 0, 5.081088), (4.443293, 0, 4.443293),
               (5.081088, 0, 3.692098), (5.592832, 0, 2.849955), (5.969952, 0, 1.939507), (6.203579, 0, 0.982165),
               (6.283766, 0, 9.12045e-010), (6.203579, 0, -0.982165), (5.969952, 0, -1.939507), (5.592832, 0, -2.849955),
               (5.081088, 0, -3.692098), (4.443293, 0, -4.443293), (3.692098, 0, -5.081088), (2.849955, 0, -5.592832),
               (1.939507, 0, -5.969952), (0.982165, 0, -6.20358), (0, 0, -6.283764)]))

        return semisphere

    def create_foot(self, shape_name):
        foot = cmds.curve(name=shape_name, d=1,
                          p=[(0, 0, -2.120128), (0, 0, -2.120128), (0.127027, 0, -2.098891), (0.266394, 0, -2.035954),
                             (0.392426, 0, -1.923814), (0.51076, 0, -1.7556), (0.570988, 0, -1.45298),
                             (0.547002, 0, -1.124658),
                             (0.546137, 0, -0.739398), (0.596986, 0, -0.424671), (0.749207, 0, 0.167214),
                             (0.821629, 0, 0.540794),
                             (0.845588, 0, 0.814546), (0.819474, 0, 1.166447), (0.740338, 0, 1.442584),
                             (0.639319, 0, 1.672901),
                             (0.518089, 0, 1.859678), (0.395504, 0, 1.9981), (0.267004, 0, 2.095142),
                             (0.134293, 0, 2.163449),
                             (0.00467529, 0, 2.182247), (-0.129434, 0, 2.164107), (-0.263571, 0, 2.097171),
                             (-0.394311, 0, 1.99895),
                             (-0.519026, 0, 1.858581), (-0.639218, 0, 1.673153), (-0.741687, 0, 1.437876),
                             (-0.814669, 0, 1.183211),
                             (-0.845483, 0, 0.813956), (-0.823555, 0, 0.546201), (-0.787024, 0, 0.199789),
                             (-0.740926, 0, -0.141818),
                             (-0.709665, 0, -0.449727), (-0.673223, 0, -0.84127), (-0.647076, 0, -1.105326),
                             (-0.607085, 0, -1.441585), (-0.515494, 0, -1.742999), (-0.403107, 0, -1.909041),
                             (-0.26381, 0, -2.03716), (-0.134123, 0, -2.097657), (0.00016811, 0, -2.1201)])

        return foot

    def create_eye(self, shape_name):
        eye = cmds.curve(name=shape_name, d=1,
                         p=[(-2.513058, -0.000789387, 0), (-2.465186, 0.0739742, 0), (-2.152997, 0.192227, 0),
                            (-1.82693, 0.391554, 0),
                            (-1.507944, 0.627928, 0), (-1.184955, 0.849308, 0), (-0.832559, 1.021739, 0),
                            (-0.449719, 1.138051, 0),
                            (0, 1.191496, 0), (0.247442, 1.154017, 0), (0.47812, 1.058465, 0), (0.676741, 0.90715, 0),
                            (0.828056, 0.70853, 0), (0.923606, 0.477852, 0), (0.957056, 0.230409, 0),
                            (0.923606, -0.0170326, 0),
                            (0.828056, -0.247711, 0), (0.676741, -0.446331, 0), (0.47812, -0.597647, 0),
                            (0.247442, -0.693197, 0),
                            (0, -0.726646, 0), (-0.247442, -0.693197, 0), (-0.47812, -0.597647, 0),
                            (-0.676741, -0.446331, 0),
                            (-0.828056, -0.247711, 0), (-0.923606, -0.0170326, 0), (-0.957056, 0.230409, 0),
                            (-0.923606, 0.477852, 0),
                            (-0.828056, 0.70853, 0), (-0.676741, 0.90715, 0), (-0.47812, 1.058465, 0),
                            (-0.247442, 1.154017, 0),
                            (0, 1.191496, 0), (0.452245, 1.134262, 0), (0.845189, 1.004057, 0), (1.195059, 0.840467, 0),
                            (1.491525, 0.656977, 0), (1.77641, 0.45723, 0), (2.093635, 0.264219, 0),
                            (2.452556, 0.0891304, 0),
                            (2.511637, 0.000631505, 0), (2.458871, -0.0840784, 0), (2.123947, -0.242747, 0),
                            (1.802933, -0.447126, 0),
                            (1.496577, -0.655714, 0), (1.195059, -0.840467, 0), (0.845189, -1.004057, 0),
                            (0.452245, -1.134263, 0),
                            (0, -1.191489, 0), (-0.452245, -1.134263, 0), (-0.845189, -1.004057, 0),
                            (-1.200111, -0.834152, 0),
                            (-1.520575, -0.622876, 0), (-1.821878, -0.40671, 0), (-2.122684, -0.220013, 0),
                            (-2.457608, -0.0802893, 0),
                            (-2.513058, -0.000789387, 0)])

        return eye

    def create_fingers (self, shape_name):
        fingers = cmds.curve(name=shape_name, d=1,
                             p=[(0, 10.112068, 0), (-0.373493, 10.162557, 0), (-0.721682, 10.306782, 0),
                                (-1.021482, 10.53518, 0),
                                (-1.24988, 10.83498, 0), (-1.394105, 11.183169, 0), (-1.444594, 11.556662, 0),
                                (-1.394105, 11.930155, 0), (-1.24988, 12.278343, 0), (-1.021482, 12.578144, 0),
                                (-0.721682, 12.806541, 0), (-0.373493, 12.950768, 0), (0, 13.001244, 0),
                                (0.373493, 12.950768, 0),
                                (0.721682, 12.806541, 0), (1.021482, 12.578144, 0), (1.24988, 12.278343, 0),
                                (1.394105, 11.930155, 0),
                                (1.444594, 11.556662, 0), (1.394105, 11.183169, 0), (1.24988, 10.83498, 0),
                                (1.021482, 10.53518, 0),
                                (0.721682, 10.306782, 0), (0.373493, 10.162557, 0), (0, 10.112068, 0), (0, 0, 0)])

        return fingers

    def create_triangle(self, shape_name):
        triangle = cmds.curve(name=shape_name, d=1,
                              p=[(2, 0, 2), (-2, 0, 2), (-2, 0, -2), (2, 0, -2), (2, 0, 2), (0, 8, 0), (-2, 0, 2),
                                 (-2, 0, -2), (0, 8, 0),
                                 (2, 0, -2), (2, 0, 2), (0, 8, 0), (-2, 0, 2)])

        return triangle

    def create_singlearrow(self, shape_name):
        singlearrow = cmds.curve(name=shape_name, d=1,
                                 p=[(-5.006643, 0, -2.016935), (1.044161, 0, -2.016935), (1.044161, 0, -4.033869),
                                    (5.07803, 0, 0),
                                    (1.044161, 0, 4.033869), (1.044161, 0, 2.016935), (-5.006643, 0, 2.016935),
                                    (-5.006643, 0, -2.016935)])

        return singlearrow

    def create_square(self, shape_name):
        square = cmds.curve(name=shape_name, d=1,
                                 p=[(-3, 0, -2), (3, 0, -2), (3, 0, 2), (-3, 0, 2), (-3, 0, -2)])

        return square

    def create_circle(self, shape_name):
       circle = cmds.circle(name=shape_name, d=1, nr =(0, 1, 0))


        return circle